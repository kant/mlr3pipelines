% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpSelect.R
\docType{data}
\name{mlr_pipeops_select}
\alias{mlr_pipeops_select}
\alias{PipeOpSelect}
\title{PipeOpSelect}
\format{\code{\link{R6Class}} object inheriting from \code{\link{PipeOpTaskPreprocSimple}}/\code{\link{PipeOpTaskPreproc}}/\code{\link{PipeOp}}.}
\description{
Removes features from \code{\link[mlr3:Task]{Task}} depending on a \code{\link{Selector}} function:
The \code{selector} parameter gives the features to keep.
See \code{\link{Selector}} for selectors that are provided and how to write custom \code{\link{Selector}}s.
}
\section{Construction}{
\preformatted{PipeOpSelect$new(id = "select", param_vals = list())
}

Identifier of resulting object, default \code{"select"}.
\itemize{
\item \code{param_vals} :: named \code{list}\cr
List of hyperparameter settings, overwriting the hyperparameter settings that would otherwise be set during construction. Default \code{list()}.
}
}

\section{Input and Output Channels}{

Input and output channels are inherited from \code{\link{PipeOpTaskPreproc}}.

The output is the input \code{\link[mlr3:Task]{Task}} with features removed that were not selected by the \code{\link{Selector}}/\code{function} in \code{selector}.
}

\section{State}{

The \code{$state} is a named \code{list} with the \code{$state} elements inherited from \code{\link{PipeOpTaskPreproc}}, as well as:
\itemize{
\item \code{selection} :: \code{character}\cr
A vector of all feature names that are kept (i.e. not dropped) in the \code{\link[mlr3:Task]{Task}}. Initialized to \code{\link[=selector_all]{selector_all()}}
}
}

\section{Parameters}{

\itemize{
\item \code{selector} :: \code{function} | \code{\link{Selector}} \cr
\code{\link{Selector}} function, takes a \code{Task} as argument and returns a \code{character}
of features to keep.\cr
See \code{\link{Selector}} for example functions. Defaults to \code{selector_all()}.
}
}

\section{Internals}{

Uses \code{task$select()}.
}

\section{Fields}{

Only fields inherited from \code{\link{PipeOpTaskPreproc}}/\code{\link{PipeOp}}.
}

\section{Methods}{

Only methods inherited from \code{\link{PipeOpTaskPreprocSimple}}/\code{\link{PipeOpTaskPreproc}}/\code{\link{PipeOp}}.
}

\examples{
pos = mlr_pipeops$get("select")

pos$param_set$values$selector = selector_all()
pos$train(list("boston_housing"))[[1]]$feature_names

pos$param_set$values$selector = selector_type("factor")
pos$train(list("boston_housing"))[[1]]$feature_names

pos$param_set$values$selector = selector_invert(selector_type("factor"))
pos$train(list("boston_housing"))[[1]]$feature_names

pos$param_set$values$selector = selector_grep("^Petal")
pos$train(list("iris"))[[1]]$feature_names

}
\seealso{
Other PipeOps: \code{\link{PipeOpEnsemble}},
  \code{\link{PipeOpTaskPreproc}}, \code{\link{PipeOp}},
  \code{\link{mlr_pipeops_branch}},
  \code{\link{mlr_pipeops_chunk}},
  \code{\link{mlr_pipeops_classbalancing}},
  \code{\link{mlr_pipeops_classifavg}},
  \code{\link{mlr_pipeops_colapply}},
  \code{\link{mlr_pipeops_copy}},
  \code{\link{mlr_pipeops_encode}},
  \code{\link{mlr_pipeops_featureunion}},
  \code{\link{mlr_pipeops_filter}},
  \code{\link{mlr_pipeops_impute}},
  \code{\link{mlr_pipeops_learner}},
  \code{\link{mlr_pipeops_mutate}},
  \code{\link{mlr_pipeops_nop}},
  \code{\link{mlr_pipeops_pca}},
  \code{\link{mlr_pipeops_regravg}},
  \code{\link{mlr_pipeops_scale}},
  \code{\link{mlr_pipeops_subsample}},
  \code{\link{mlr_pipeops_unbranch}},
  \code{\link{mlr_pipeops}}

Other Selectors: \code{\link{Selector}}
}
\concept{PipeOps}
\concept{Selectors}
\keyword{datasets}
